Journals

June 2017----------------------------

RCSI exams are all done and forgotten about. It feels like I've crammed so much into my memory in the last year and neglected computing to the extent that I'm forgetting how to do very basic tasks. I think I'll have to work back up slowly, which is fine because I have a decent chunk of time to get my computing back into focus over the summer. I wont be starting work as an intern until July, which gives me a full month of essentially uninterupted time. I've been thinking about my build stratagy a bit; my original idea of a html/php/js front end powered web application passing data back to a sql server, which is then accessed by a Java desktop application. It's probably not a great idea to deviate from the plan at this stage, but I've come up with a few flaws with this plan in my own mind. 

Firstly, security is going to be difficult. I was listing out my function/ non-functional requirements, and above all, data privacy is the primary concern with this app. I'll have to be able to defend it in front of the RCSI ethics board. Using different technologies means I'm doing a lot of the security myself, which would be a fun learning experience, but at the end of the day, patients medical records should be handled with a bit more care. If I used a MVC web application framework, security would be handled by the framework, which at the end of the day, will probably do a better job than I would. I'm leaning towards this idea, beacuse as I've mentioned before, I've been given an accademic track internship meaning I'll have 3 months of funded research to actually test this applciation in clinical practice in Beaumont hospital. 

While I know the HTML/PHP/JS -> SQL -> Java desktop will take more coding, I chose it initially because those are the technologies I'm most comfrotable with. To be honest, I've always been afraid of back end web apps. We've had modules based on Java/Glassfish web apps, and .NET MVC web apps. I've managed to scrape pass them, but to be honest I'm not happy with my lack of proficency. I wouldn't be able to confidently build one, and it's a pretty key skill for a computing student. It will be objectivly harder for me to do (back end web app), because I'll be learning as I go. I'm already a bit disheartened by how difficult I found the two modules, but I honestly can't say I tried as hard as I could. I'm considering starting over with a new web app framework (no way am I ever going near Glassfish again), and starting over. I have time to play around with it. I'll give myself a week to pick a framework and make a hello world like app. If it's working out well, I might go with that. The primary candidate I suppose is Ruby on Rails. Back in first year I lived with a TCD computer science student who strongly recomended ROR, and I've heard good things about it. I'm already on Mac, meaing I don't have to work on a virtual machine like windows users, which I understand is the big drawback to using ROR. We also have a cloud computing project using ROR which I've also deferred to this summer. I suppose I'll have to get to grips with it on some level, but I'm sure there'll be a lot of extra work to build the final year project with it, over just a regular modules project

I'll give it a go, and worst case scenario we're back to where we are now this time next week. 

July 2017----------------------------

So I've had a nice confidence booster since the last journal entry. I've graduated from RCSI with a first class honours MB. I also won a couple of medals in medicine and surgery. I knew I had passed the exams, but give that I usually score a lot lower, the first was a suprise. I was unsure about deferring the computing projects, but it was such a break to have those three months to focus just on medicine, and I'm sure now in retrospect I made the right decision. The only downside is this unexpected wave of laziness thats washed over me since the RCSI graduation. I've gotten so much slower, and far less disciplined.

The good news though, I've become best friends with Ruby on Rails. It's far more managable than I thought. Really, it was just a case of getting my head arround the MVC concepts. I've since even gone back to the .NET MVC framework and gotten to grips with that just to prove to myself that I could (and I can). I think I just needed the oppertunity to learn at my own pace, I used a lot of content on YouTube, which worked well for me. I have most of the application built in Rails already. I was actually able to build very quickly as I could essentially transfer the logic and data concepts I had written up in the old HTML/JS/PHP version of the site over in no time. I have my database tables and models done, it's just patients and users. The patients are assessed by the website using a callback, a feature provided by rails which exicutes a method at specified points in the objects lifecycle. It worked perfectly for what I needed to do. I'm delighted with how it's working out. I've just deployed it up to Heroku this morning which took a few hours of bug fixing, but it's working perfectly now. 

I've neglected my doccumentation a bit, but that's fine, I still have a month to write up. I do a lot of scientific writing in Medicine, having published a couple papers, manuscripts and letters in peer reviewed scientific journals, so I'm usually pretty confident in writing technical reports for college (touch wood). 

That's where I am for now, I'm moving to Limerick next week to start my internship which I'm very excited about. I'm pretty sick of being a student at this point (and the salary will be a nice bonus, no matter how bad it is, it's something!). 